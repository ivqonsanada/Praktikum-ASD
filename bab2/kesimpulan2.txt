NOMOR 1
	Abstract Data Types atau lebih dikenal sebagai ADT adalah sebuah jenis (class) untuk object yang behavior nya didefinisikan sebagai sekumpulan nilai dan sekumpulan operasi.
	secara definitif ADT hanya menyingung operasi apa yang akan dilakukan tetapi tidak menyinggung bagaimana operasi operasi ini akan diimplementasikan. ADT juga tidak menentukan bagaimana data akan diatur di memori dan algoritme apa yang akan digunakan untuk mengimplementasikan operasi yang ada. ADT disebut "Abstract" karena Ia memberikan sebuah teknik implementasi dengan sudut pandang yang independent. Proses menyediakan esensi yang ada dan menyembunyikan detail inilah yang dikenal sebagai Abstraksi.
	User dari tipe data tidak perlu mengetahui tipe data tersebut diimplementasikan. sebagai contoh, kita telah menggunakan tipe data int, float, char hanya dengan pengetahuan tentang nilai yang bisa diambil dan opearasi yang bisa dilakukan pada tipe data tersebut tanpa mengetahui bagaimana tipe data ini diimplementasikan. Jadi, seorang user hanya perlu mengetahui tipe data apa yang bisa melakukan apa tetapi tidak bagaimana ia melakukannya. Kita bisa menganalogikan ADT sebagai sebuah blackbox yang menyembunyikan strukter dalam dan desain dari tipe datanya

NOMOR 2

	Array adalah representas data pada lokasi memori secara berurutan dan bertipe sama. Pengaksesan data ke dalam array menggunakan indek. Karena sifatnya inilah maka
array cocok digunakan untuk pengornasisasian data yang seragam.
	
		int[] umur = new  int[5];
		//deklarasi dan pembuatan object umur dari array int dengan cakupan index sebanyak 5		
		
		
	
		int[] umur = {12, 4, 5, 2, 5}
		//cara lain deklarasi yang langsung memasukkan nilai tiap index
		 
		
		
		umur[2] = 700
		umur[3] = 1
		cara untuk akses index tertentu di array
		
		
		
		for( int i = 0; i < 5; i++){
			System.out.println(umur[i]);
		}
		cara untuk menampilkan tiap index yang ada
	
	Ada banyak macam array. Namun, jika dilihat dari dimensinya array bisa dibagi dua yaitu array 1 dimensi dan array multidimensi.
	
	contoh array 1 dimensi sama seperti diatas. Namun, array multidimensi contohnya sebagai berikut :
	
		 String[][] dogs = {{ "terry", "brown" },
                          	 { "Kristin", "white" },
                          	 { "toby", "gray"},
                          	 { "fido", "black"}
                          	 };
		
		
		
NOMOR 3
	
	Array ditujukan untuk menyimpan banyak data dengan tipe data yang sama secara sekuensial dengan cakupan memori yang fixed dari awal deklarasi. Contohnya adalah jika kita ingin memasukkan nama teman kita (tipe data String), maka kita cukup membuat array dengan tipe data String dan melakukan inisialisasi ke setiap index dari Array tersebut.


	// membuat array
		String[] nama = {"Linda", "Santi", "Susan", "Mila", "Ayu"};

	// mengambil data array
		for(int i = 0; i < nama.length; i++){
			System.out.println(nama[i];
		}	
